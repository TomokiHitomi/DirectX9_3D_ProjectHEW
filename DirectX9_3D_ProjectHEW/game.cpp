//=============================================================================
//
// ゲーム処理 [game.cpp]
// Author : GP11B243 24 人見友基
//
//=============================================================================
#include "game.h"
#include "stage.h"
#include "input.h"
#include "fade.h"

// ゲームで必要なインクルード
#include "effect.h"
#include "shadow.h"

// 担当ワーク
#include "workChisaka.h"
#include "workHitomi.h"
#include "workHoriguchi.h"
#include "workYamaguchi.h"
#include "workYoshida.h"

// デバッグ用
#ifdef _DEBUG
#include "debugproc.h"
#endif

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************


//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitGame(int nType)
{
	InitEffect(nType);			// エフェクト
	InitShadow(nType);			// シャドウ
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitGame(void)
{
	UninitEffect();				// エフェクト
	UninitShadow();				// シャドウ
}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateGame(void)
{
	UpdateWorkChisaka();		// 千坂担当分
	UpdateWorkHitomi();			// 人見担当分
	UpdateWorkHoriguchi();		// 堀口担当分
	UpdateWorkYamaguchi();		// 山口担当分
	UpdateWorkYoshida();		// 吉田担当分

	UpdateEffect();				// エフェクト
	UpdateShadow();				// シャドウ
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawGame(void)
{

	DrawWorkYamaguchi();		// 山口担当分
	DrawWorkHitomi();			// 人見担当分
	DrawWorkChisaka();			// 千坂担当分
	DrawWorkHoriguchi();		// 堀口担当分
	DrawWorkYoshida();			// 吉田担当分
	DrawEffect();				// エフェクト
	// シャドウのDrawは山口担当分内
}

