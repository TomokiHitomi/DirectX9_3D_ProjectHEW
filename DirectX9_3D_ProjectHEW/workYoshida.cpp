//=============================================================================
//
// 吉田担当分 [workYoshida.cpp]
// Author : GP11B243 24 人見友基
//
//=============================================================================
#include "workYoshida.h"
#include "stage.h"
#include "input.h"
#include "fade.h"

// 吉田担当分で必要なインクルード
#include "titlelogo.h"
#include "resultlogo.h"

// デバッグ用
#ifdef _DEBUG
#include "debugproc.h"
#endif

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************


//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitWorkYoshida(int nType)
{
	InitTitlelogo(nType);		// タイトルロゴ
	InitResultlogo(nType);		// リザルトロゴ
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitWorkYoshida(void)
{
	UninitTitlelogo();			// タイトルロゴ
	UninitResultlogo();			// リザルトロゴ

}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateWorkYoshida(void)
{
	switch (GetStage())
	{
	case STAGE_TITLE:
		UpdateTitlelogo();		// タイトルロゴ
		break;
	case STAGE_RESULT:
		UpdateResultlogo();		// リザルトロゴ
		break;
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawWorkYoshida(void)
{
	switch (GetStage())
	{
	case STAGE_TITLE:
		DrawTitlelogo();		// タイトルロゴ
		break;
	case STAGE_RESULT:
		DrawResultlogo();		// リザルトロゴ
		break;
	}

}

